/**
 * Formblok Mobile
 * API documentation for the mobile endpoints of formblok.
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package com.incubasys.formblok.projects.data.model

import android.os.Parcelable
import com.google.gson.annotations.SerializedName
import com.incubasys.formblok.common.data.model.MaterialTypeProperty
import kotlinx.android.parcel.Parcelize


@Parcelize
data class PropertyOutput(
    @SerializedName("id") var id: Int = -1,
    @SerializedName("lot_number") var lot_number: String = "",
    @SerializedName("property_number") var property_number: String = "",
    @SerializedName("site_area") var site_area: Double = 0.0,
    @SerializedName("garden_area") var garden_area: Double = 0.0,
    @SerializedName("garden_area_percentage") var garden_area_percentage: Double = 0.0,
    @SerializedName("north_area") var north_area: Double = 0.0,
    @SerializedName("north_area_percentage") var north_area_percentage: Double = 0.0,
    @SerializedName("driveway_area") var driveway_area: Double = 0.0,
    @SerializedName("open_liveable_area") var open_liveable_area: Double = 0.0,
    @SerializedName("ground_floor_area") var ground_floor_area: Double = 0.0,
    @SerializedName("total_liveable_area") var total_liveable_area: Double = 0.0,
    @SerializedName("floors") var floors: Int = -1,
    @SerializedName("intermediate_area") var intermediate_area: Double = 0.0,
    @SerializedName("construction_style") var construction_style: Int = 0,
    @SerializedName("construction_type") var construction_type: Int = -1,
    @SerializedName("development_type") var development_type: Int = -1,
    @SerializedName("total_cost") var total_cost: Double = 0.0,
    @SerializedName("street_address") var address: String = "",
    @SerializedName("area") var area: String = "",
    @SerializedName("first_floor_area") var first_floor_area: Double = 0.0,
        @SerializedName("already_built_area") var already_built_area: Double = 0.0,
    @SerializedName("demolish_area") var demolish_area: Double = 0.0,
    @SerializedName("material_category") var material_category: MaterialCategoryOutput = MaterialCategoryOutput(),
    @SerializedName("property_rooms") var property_rooms: MutableList<PropertyRoomOutput>? = mutableListOf(),
    @SerializedName("zones") var zones: MutableList<Zone> = mutableListOf(),
    @SerializedName("overlays") var overlays: MutableList<Zone> = mutableListOf(),
    @SerializedName("council_information") var councilInformation: CouncilInfo = CouncilInfo(),
    @SerializedName("neighbourhood_information") var neighbourhoodInformation: NeighbourhoodInfo? = NeighbourhoodInfo(),
    @SerializedName("utility_information") var utilityInfomation: UtilityInfo = UtilityInfo(),
    @SerializedName("polygon") var polygon: MutableList<Polygon> = mutableListOf(),
    @SerializedName("share_url") var shareUrl: String = "",
    @Transient var isAddress: Boolean = false
   // @Transient var materialTypeWithData: MutableList<MaterialTypeProperty>? = mutableListOf()
) : Parcelable {
    fun toPropertyInput(propertyInput: PropertyInput): PropertyInput {
        propertyInput.lot_number = lot_number
        propertyInput.property_number = property_number
        propertyInput.site_area = site_area
        propertyInput.garden_area = garden_area
        propertyInput.garden_area_percentage = garden_area_percentage
        propertyInput.north_area = north_area
        propertyInput.north_area_percentage = north_area_percentage
        propertyInput.driveway_area = driveway_area
        propertyInput.open_liveable_area = open_liveable_area
        propertyInput.ground_floor_area = ground_floor_area
        propertyInput.total_liveable_area = total_liveable_area
        propertyInput.floors = floors
        propertyInput.construction_style = construction_style
        propertyInput.construction_type = construction_type
        propertyInput.development_type = development_type
        propertyInput.first_floor_area = first_floor_area
        propertyInput.already_built_area = already_built_area
        propertyInput.demolish_area = demolish_area
        propertyInput.materialCategoryId = material_category.id
        val propertyRoomInputList: MutableList<PropertyRoomInput> = mutableListOf()
        property_rooms?.forEach { propertyRoomOutput ->
            val propertyRoom = PropertyRoomInput()
            propertyRoom.roomId = propertyRoomOutput.roomId
            propertyRoom.length = propertyRoomOutput.length
            propertyRoom.width = propertyRoomOutput.width
            propertyRoomInputList.add(propertyRoom)
        }
        propertyInput.property_rooms = propertyRoomInputList
        propertyInput.address = address
        propertyInput.area = area
        propertyInput.addressId = id
        propertyInput.total_cost = total_cost
        return propertyInput
    }
}